{
  "contractName": "ILaunchpadLockForwarder",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20Meta",
          "name": "_baseToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_saleToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_saleAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_unlockDate",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_withdrawer",
          "type": "address"
        }
      ],
      "name": "lockLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        }
      ],
      "name": "energyFiswapPairIsInitialised",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"energyFiswapPairIsInitialised\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Meta\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_saleAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unlockDate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_withdrawer\",\"type\":\"address\"}],\"name\":\"lockLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"energyFiswapPairIsInitialised(address,address)\":{\"params\":{\"_token0\":\"one address of the energyFi pair base tokens\",\"_token1\":\"the other address of the energyFi pair base tokens\"}},\"lockLiquidity(address,address,uint256,uint256,uint256,address)\":{\"params\":{\"_baseAmount\":\"amount of base tokens to be locked\",\"_baseToken\":\"token received for sold launchpad token\",\"_saleAmount\":\"amount of sale tokens to be locked\",\"_saleToken\":\"token sold in launchpad\",\"_unlockDate\":\"timestamp to unlock the locked lp token\",\"_withdrawer\":\"address allowed to withdraw token after unlock date\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"energyFiswapPairIsInitialised(address,address)\":{\"notice\":\"checks if a energyFi pair with liquidity exists on energyFiswap for the given tokens\"},\"lockLiquidity(address,address,uint256,uint256,uint256,address)\":{\"notice\":\"locks iquidity by creating a liquidity pair (LP) with base and sale token, sending liquidity amount of both tokens to the LP and locks the minted LP token with PancakeLocker contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/interfaces/ILaunchpadLockForwarder.sol\":\"ILaunchpadLockForwarder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"project:/interfaces/IERC20Meta.sol\":{\"keccak256\":\"0x99a6d912c17872d57b701fbc08c2eaf69ad94ab20b9400b759bdd644511fd90d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38ec60c4690e8d76e89c8c59f89a57823af48aac2101f9ad9277253dfe3d9ab6\",\"dweb:/ipfs/QmPHhyf58yY9s84DdGVZg5Z3cHwjJoJ1oWyX327A23xzFe\"]},\"project:/interfaces/ILaunchpadLockForwarder.sol\":{\"keccak256\":\"0x66c141bd58fb54233ed97d11eb9eebbfd66852700e6256c95324b47cbe547667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2822b28603c8d254f585fa651bd50a8f446cb57a6d57911ea8b79e411840799d\",\"dweb:/ipfs/QmZGYhoKuJ9EvEbW1fDL1gqteW87k4PrzhfQ5TaTyT4uWx\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\n/**\n * @title LockForwarder Interface of the Pancake launchpad enviroment\n * @dev This interface describes the LaunchpadLockForwarder. It holds functions for interacting\n * with the energyFiswap factory for getting LP information and creating a LP on locking liquidity.\n * The locked liquidity amount is forwarded to PancakeLocker contract.\n */\n\nimport \"./IERC20Meta.sol\";\n\ninterface ILaunchpadLockForwarder {\n    /**\n     * @notice locks iquidity by creating a liquidity pair (LP) with base and sale token,\n     * sending liquidity amount of both tokens to the LP and locks the minted LP token\n     * with PancakeLocker contract.\n     * @param _baseToken token received for sold launchpad token\n     * @param _saleToken token sold in launchpad\n     * @param _baseAmount amount of base tokens to be locked\n     * @param _saleAmount amount of sale tokens to be locked\n     * @param _unlockDate timestamp to unlock the locked lp token\n     * @param _withdrawer address allowed to withdraw token after unlock date\n     */\n    function lockLiquidity(\n        IERC20Meta _baseToken,\n        IERC20 _saleToken,\n        uint256 _baseAmount,\n        uint256 _saleAmount,\n        uint256 _unlockDate,\n        address payable _withdrawer\n    ) external;\n\n    /**\n     * @notice checks if a energyFi pair with liquidity exists on energyFiswap for the given tokens\n     * @param _token0 one address of the energyFi pair base tokens\n     * @param _token1 the other address of the energyFi pair base tokens\n     */\n    function energyFiswapPairIsInitialised(address _token0, address _token1)\n        external\n        view\n        returns (bool);\n}\n",
  "sourcePath": "/Users/apple/Downloads/kinko-ilo-contracts-main/interfaces/ILaunchpadLockForwarder.sol",
  "ast": {
    "absolutePath": "project:/interfaces/ILaunchpadLockForwarder.sol",
    "exportedSymbols": {
      "ILaunchpadLockForwarder": [
        9717
      ]
    },
    "id": 9718,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9689,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:22"
      },
      {
        "absolutePath": "project:/interfaces/IERC20Meta.sol",
        "file": "./IERC20Meta.sol",
        "id": 9690,
        "nodeType": "ImportDirective",
        "scope": 9718,
        "sourceUnit": 9624,
        "src": "405:26:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 9717,
        "linearizedBaseContracts": [
          9717
        ],
        "name": "ILaunchpadLockForwarder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 9691,
              "nodeType": "StructuredDocumentation",
              "src": "473:605:22",
              "text": " @notice locks iquidity by creating a liquidity pair (LP) with base and sale token,\n sending liquidity amount of both tokens to the LP and locks the minted LP token\n with PancakeLocker contract.\n @param _baseToken token received for sold launchpad token\n @param _saleToken token sold in launchpad\n @param _baseAmount amount of base tokens to be locked\n @param _saleAmount amount of sale tokens to be locked\n @param _unlockDate timestamp to unlock the locked lp token\n @param _withdrawer address allowed to withdraw token after unlock date"
            },
            "functionSelector": "2277d0e3",
            "id": 9706,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lockLiquidity",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9693,
                  "mutability": "mutable",
                  "name": "_baseToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9706,
                  "src": "1115:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Meta_$9623",
                    "typeString": "contract IERC20Meta"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9692,
                    "name": "IERC20Meta",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9623,
                    "src": "1115:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Meta_$9623",
                      "typeString": "contract IERC20Meta"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9695,
                  "mutability": "mutable",
                  "name": "_saleToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9706,
                  "src": "1146:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$542",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9694,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 542,
                    "src": "1146:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$542",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9697,
                  "mutability": "mutable",
                  "name": "_baseAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9706,
                  "src": "1173:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9699,
                  "mutability": "mutable",
                  "name": "_saleAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9706,
                  "src": "1202:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9701,
                  "mutability": "mutable",
                  "name": "_unlockDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9706,
                  "src": "1231:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9703,
                  "mutability": "mutable",
                  "name": "_withdrawer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9706,
                  "src": "1260:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:15:22",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1105:188:22"
            },
            "returnParameters": {
              "id": 9705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1302:0:22"
            },
            "scope": 9717,
            "src": "1083:220:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 9707,
              "nodeType": "StructuredDocumentation",
              "src": "1309:251:22",
              "text": " @notice checks if a energyFi pair with liquidity exists on energyFiswap for the given tokens\n @param _token0 one address of the energyFi pair base tokens\n @param _token1 the other address of the energyFi pair base tokens"
            },
            "functionSelector": "2bd3b8b3",
            "id": 9716,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "energyFiswapPairIsInitialised",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9709,
                  "mutability": "mutable",
                  "name": "_token0",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9716,
                  "src": "1604:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9711,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9716,
                  "src": "1621:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:34:22"
            },
            "returnParameters": {
              "id": 9715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9716,
                  "src": "1685:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9713,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1684:6:22"
            },
            "scope": 9717,
            "src": "1565:126:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9718,
        "src": "433:1260:22"
      }
    ],
    "src": "32:1662:22"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/interfaces/ILaunchpadLockForwarder.sol",
      "exportedSymbols": {
        "ILaunchpadLockForwarder": [
          9717
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 9689,
        "name": "PragmaDirective",
        "src": "32:23:22"
      },
      {
        "attributes": {
          "SourceUnit": 9624,
          "absolutePath": "project:/interfaces/IERC20Meta.sol",
          "file": "./IERC20Meta.sol",
          "scope": 9718,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 9690,
        "name": "ImportDirective",
        "src": "405:26:22"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": null,
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            9717
          ],
          "name": "ILaunchpadLockForwarder",
          "scope": 9718
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "functionSelector": "2277d0e3",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "lockLiquidity",
              "overrides": null,
              "scope": 9717,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice locks iquidity by creating a liquidity pair (LP) with base and sale token,\n sending liquidity amount of both tokens to the LP and locks the minted LP token\n with PancakeLocker contract.\n @param _baseToken token received for sold launchpad token\n @param _saleToken token sold in launchpad\n @param _baseAmount amount of base tokens to be locked\n @param _saleAmount amount of sale tokens to be locked\n @param _unlockDate timestamp to unlock the locked lp token\n @param _withdrawer address allowed to withdraw token after unlock date"
                },
                "id": 9691,
                "name": "StructuredDocumentation",
                "src": "473:605:22"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_baseToken",
                      "overrides": null,
                      "scope": 9706,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IERC20Meta",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IERC20Meta",
                          "referencedDeclaration": 9623,
                          "type": "contract IERC20Meta"
                        },
                        "id": 9692,
                        "name": "UserDefinedTypeName",
                        "src": "1115:10:22"
                      }
                    ],
                    "id": 9693,
                    "name": "VariableDeclaration",
                    "src": "1115:21:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_saleToken",
                      "overrides": null,
                      "scope": 9706,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IERC20",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IERC20",
                          "referencedDeclaration": 542,
                          "type": "contract IERC20"
                        },
                        "id": 9694,
                        "name": "UserDefinedTypeName",
                        "src": "1146:6:22"
                      }
                    ],
                    "id": 9695,
                    "name": "VariableDeclaration",
                    "src": "1146:17:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_baseAmount",
                      "overrides": null,
                      "scope": 9706,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 9696,
                        "name": "ElementaryTypeName",
                        "src": "1173:7:22"
                      }
                    ],
                    "id": 9697,
                    "name": "VariableDeclaration",
                    "src": "1173:19:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_saleAmount",
                      "overrides": null,
                      "scope": 9706,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 9698,
                        "name": "ElementaryTypeName",
                        "src": "1202:7:22"
                      }
                    ],
                    "id": 9699,
                    "name": "VariableDeclaration",
                    "src": "1202:19:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_unlockDate",
                      "overrides": null,
                      "scope": 9706,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 9700,
                        "name": "ElementaryTypeName",
                        "src": "1231:7:22"
                      }
                    ],
                    "id": 9701,
                    "name": "VariableDeclaration",
                    "src": "1231:19:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_withdrawer",
                      "overrides": null,
                      "scope": 9706,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 9702,
                        "name": "ElementaryTypeName",
                        "src": "1260:15:22"
                      }
                    ],
                    "id": 9703,
                    "name": "VariableDeclaration",
                    "src": "1260:27:22"
                  }
                ],
                "id": 9704,
                "name": "ParameterList",
                "src": "1105:188:22"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 9705,
                "name": "ParameterList",
                "src": "1302:0:22"
              }
            ],
            "id": 9706,
            "name": "FunctionDefinition",
            "src": "1083:220:22"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "2bd3b8b3",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "energyFiswapPairIsInitialised",
              "overrides": null,
              "scope": 9717,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice checks if a energyFi pair with liquidity exists on energyFiswap for the given tokens\n @param _token0 one address of the energyFi pair base tokens\n @param _token1 the other address of the energyFi pair base tokens"
                },
                "id": 9707,
                "name": "StructuredDocumentation",
                "src": "1309:251:22"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_token0",
                      "overrides": null,
                      "scope": 9716,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 9708,
                        "name": "ElementaryTypeName",
                        "src": "1604:7:22"
                      }
                    ],
                    "id": 9709,
                    "name": "VariableDeclaration",
                    "src": "1604:15:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_token1",
                      "overrides": null,
                      "scope": 9716,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 9710,
                        "name": "ElementaryTypeName",
                        "src": "1621:7:22"
                      }
                    ],
                    "id": 9711,
                    "name": "VariableDeclaration",
                    "src": "1621:15:22"
                  }
                ],
                "id": 9712,
                "name": "ParameterList",
                "src": "1603:34:22"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 9716,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 9713,
                        "name": "ElementaryTypeName",
                        "src": "1685:4:22"
                      }
                    ],
                    "id": 9714,
                    "name": "VariableDeclaration",
                    "src": "1685:4:22"
                  }
                ],
                "id": 9715,
                "name": "ParameterList",
                "src": "1684:6:22"
              }
            ],
            "id": 9716,
            "name": "FunctionDefinition",
            "src": "1565:126:22"
          }
        ],
        "id": 9717,
        "name": "ContractDefinition",
        "src": "433:1260:22"
      }
    ],
    "id": 9718,
    "name": "SourceUnit",
    "src": "32:1662:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-02T08:04:48.331Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "energyFiswapPairIsInitialised(address,address)": {
        "params": {
          "_token0": "one address of the energyFi pair base tokens",
          "_token1": "the other address of the energyFi pair base tokens"
        }
      },
      "lockLiquidity(address,address,uint256,uint256,uint256,address)": {
        "params": {
          "_baseAmount": "amount of base tokens to be locked",
          "_baseToken": "token received for sold launchpad token",
          "_saleAmount": "amount of sale tokens to be locked",
          "_saleToken": "token sold in launchpad",
          "_unlockDate": "timestamp to unlock the locked lp token",
          "_withdrawer": "address allowed to withdraw token after unlock date"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "energyFiswapPairIsInitialised(address,address)": {
        "notice": "checks if a energyFi pair with liquidity exists on energyFiswap for the given tokens"
      },
      "lockLiquidity(address,address,uint256,uint256,uint256,address)": {
        "notice": "locks iquidity by creating a liquidity pair (LP) with base and sale token, sending liquidity amount of both tokens to the LP and locks the minted LP token with PancakeLocker contract."
      }
    },
    "version": 1
  }
}