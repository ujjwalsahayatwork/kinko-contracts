{
  "contractName": "ERC20Burn",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/test/ERC20Burn.sol\":\"ERC20Burn\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/test/ERC20.sol\":{\"keccak256\":\"0x53f28839f28e56a5e73f2a741ab27d7f714e33e35731f3251ca53c799881aa69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53383cb15d39ade27e618d0dc05dbac1eacef67c83d921cb00d2d0569f80a036\",\"dweb:/ipfs/QmYjo4fphfHiAWg6JAXJsKZ5fQ7n3KtXUYkpP4hg5g5VJ4\"]},\"project:/contracts/test/ERC20Burn.sol\":{\"keccak256\":\"0x522a3e3e8cd67a916b695aa82e906ab416850569f452e1827d6ff36a96a3690e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eaaacd40f192d380ee4097547d9fa7f896d6068c71a12169123f841197f84b6\",\"dweb:/ipfs/QmQXa4y9z6EmuPLjDFZg42NX4uCydVGhkaDu4csciMh3eY\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f8238038062000f82833981810160405260208110156200003757600080fd5b5051604080518082018252600a815269213ab937102a37b5b2b760b11b6020828101918252835180850190945260038085526242544b60e81b91850191909152825192939285926200008a92916200024a565b508151620000a09060049060208501906200024a565b506005805460ff191660ff928316179055620000cd92503391508316600a0a6509184e72a00002620000d4565b50620002e6565b6001600160a01b03821662000130576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200013e60008383620001e3565b6200015a81600254620001e860201b620006521790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200018d91839062000652620001e8821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60008282018381101562000243576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028d57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bd578251825591602001919060010190620002a0565b50620002cb929150620002cf565b5090565b5b80821115620002cb5760008155600101620002d0565b610c8c80620002f66000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b411461029c578063a457c2d7146102a4578063a9059cbb146102d0578063dd62ed3e146102fc576100cf565b806342966c681461022b57806370a082311461024a57806379cc679014610270576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab578063313ce567146101e157806339509351146101ff575b600080fd5b6100dc61032a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b0381351690602001356103c0565b604080519115158252519081900360200190f35b6101996103dd565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103e3565b6101e961046a565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561021557600080fd5b506001600160a01b038135169060200135610473565b6102486004803603602081101561024157600080fd5b50356104c1565b005b6101996004803603602081101561026057600080fd5b50356001600160a01b03166104d5565b6102486004803603604081101561028657600080fd5b506001600160a01b0381351690602001356104f0565b6100dc61054a565b61017d600480360360408110156102ba57600080fd5b506001600160a01b0381351690602001356105ab565b61017d600480360360408110156102e657600080fd5b506001600160a01b038135169060200135610613565b6101996004803603604081101561031257600080fd5b506001600160a01b0381358116916020013516610627565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b5050505050905090565b60006103d46103cd6106b3565b84846106b7565b50600192915050565b60025490565b60006103f08484846107a3565b610460846103fc6106b3565b61045b85604051806060016040528060288152602001610b7c602891396001600160a01b038a1660009081526001602052604081209061043a6106b3565b6001600160a01b0316815260208101919091526040016000205491906108fe565b6106b7565b5060019392505050565b60055460ff1690565b60006103d46104806106b3565b8461045b85600160006104916106b3565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610652565b6104d26104cc6106b3565b82610995565b50565b6001600160a01b031660009081526020819052604090205490565b600061052782604051806060016040528060248152602001610ba4602491396105208661051b6106b3565b610627565b91906108fe565b905061053b836105356106b3565b836106b7565b6105458383610995565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103b65780601f1061038b576101008083540402835291602001916103b6565b60006103d46105b86106b3565b8461045b85604051806060016040528060258152602001610c3260259139600160006105e26106b3565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906108fe565b60006103d46106206106b3565b84846107a3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156106ac576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166106fc5760405162461bcd60e51b8152600401808060200182810382526024815260200180610c0e6024913960400191505060405180910390fd5b6001600160a01b0382166107415760405162461bcd60e51b8152600401808060200182810382526022815260200180610b346022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107e85760405162461bcd60e51b8152600401808060200182810382526025815260200180610be96025913960400191505060405180910390fd5b6001600160a01b03821661082d5760405162461bcd60e51b8152600401808060200182810382526023815260200180610aef6023913960400191505060405180910390fd5b610838838383610545565b61087581604051806060016040528060268152602001610b56602691396001600160a01b03861660009081526020819052604090205491906108fe565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108a49082610652565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561098d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561095257818101518382015260200161093a565b50505050905090810190601f16801561097f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0382166109da5760405162461bcd60e51b8152600401808060200182810382526021815260200180610bc86021913960400191505060405180910390fd5b6109e682600083610545565b610a2381604051806060016040528060228152602001610b12602291396001600160a01b03851660009081526020819052604090205491906108fe565b6001600160a01b038316600090815260208190526040902055600254610a499082610a91565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082821115610ae8576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203bccba0d17ea91ee21c953b95f24266eb2b8f3609d35526a0fa6724ff9f6fd5264736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b411461029c578063a457c2d7146102a4578063a9059cbb146102d0578063dd62ed3e146102fc576100cf565b806342966c681461022b57806370a082311461024a57806379cc679014610270576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab578063313ce567146101e157806339509351146101ff575b600080fd5b6100dc61032a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b0381351690602001356103c0565b604080519115158252519081900360200190f35b6101996103dd565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103e3565b6101e961046a565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561021557600080fd5b506001600160a01b038135169060200135610473565b6102486004803603602081101561024157600080fd5b50356104c1565b005b6101996004803603602081101561026057600080fd5b50356001600160a01b03166104d5565b6102486004803603604081101561028657600080fd5b506001600160a01b0381351690602001356104f0565b6100dc61054a565b61017d600480360360408110156102ba57600080fd5b506001600160a01b0381351690602001356105ab565b61017d600480360360408110156102e657600080fd5b506001600160a01b038135169060200135610613565b6101996004803603604081101561031257600080fd5b506001600160a01b0381358116916020013516610627565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b5050505050905090565b60006103d46103cd6106b3565b84846106b7565b50600192915050565b60025490565b60006103f08484846107a3565b610460846103fc6106b3565b61045b85604051806060016040528060288152602001610b7c602891396001600160a01b038a1660009081526001602052604081209061043a6106b3565b6001600160a01b0316815260208101919091526040016000205491906108fe565b6106b7565b5060019392505050565b60055460ff1690565b60006103d46104806106b3565b8461045b85600160006104916106b3565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610652565b6104d26104cc6106b3565b82610995565b50565b6001600160a01b031660009081526020819052604090205490565b600061052782604051806060016040528060248152602001610ba4602491396105208661051b6106b3565b610627565b91906108fe565b905061053b836105356106b3565b836106b7565b6105458383610995565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103b65780601f1061038b576101008083540402835291602001916103b6565b60006103d46105b86106b3565b8461045b85604051806060016040528060258152602001610c3260259139600160006105e26106b3565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906108fe565b60006103d46106206106b3565b84846107a3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156106ac576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166106fc5760405162461bcd60e51b8152600401808060200182810382526024815260200180610c0e6024913960400191505060405180910390fd5b6001600160a01b0382166107415760405162461bcd60e51b8152600401808060200182810382526022815260200180610b346022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107e85760405162461bcd60e51b8152600401808060200182810382526025815260200180610be96025913960400191505060405180910390fd5b6001600160a01b03821661082d5760405162461bcd60e51b8152600401808060200182810382526023815260200180610aef6023913960400191505060405180910390fd5b610838838383610545565b61087581604051806060016040528060268152602001610b56602691396001600160a01b03861660009081526020819052604090205491906108fe565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108a49082610652565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561098d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561095257818101518382015260200161093a565b50505050905090810190601f16801561097f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0382166109da5760405162461bcd60e51b8152600401808060200182810382526021815260200180610bc86021913960400191505060405180910390fd5b6109e682600083610545565b610a2381604051806060016040528060228152602001610b12602291396001600160a01b03851660009081526020819052604090205491906108fe565b6001600160a01b038316600090815260208190526040902055600254610a499082610a91565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082821115610ae8576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203bccba0d17ea91ee21c953b95f24266eb2b8f3609d35526a0fa6724ff9f6fd5264736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "81:204:15:-:0;;;130:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;130:153:15;12872:198:14;;;;;;;;;;;-1:-1:-1;;;130:153:15;12872:198:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12872:198:14;;;;;;;12992:13;;12872:198;;;130:153:15;;12992:13:14;;12872:198;12992:13;:::i;:::-;-1:-1:-1;13015:17:14;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;13042:9:14;:21;;-1:-1:-1;;13042:21:14;;;;;;;;214:62:15::1;::::0;-1:-1:-1;220:10:15::1;::::0;-1:-1:-1;253:22:15;::::1;261:2;253:22;232:18;:43;214:5;:62::i;:::-;130:153:::0;81:204;;19339:370:14;-1:-1:-1;;;;;19422:21:14;;19414:65;;;;;-1:-1:-1;;;19414:65:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;19490:49;19519:1;19523:7;19532:6;19490:20;:49::i;:::-;19565:24;19582:6;19565:12;;:16;;;;;;:24;;;;:::i;:::-;19550:12;:39;-1:-1:-1;;;;;19620:18:14;;:9;:18;;;;;;;;;;;;:30;;19643:6;;19620:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;19599:18:14;;:9;:18;;;;;;;;;;;:51;;;;19665:37;;;;;;;19599:18;;:9;;19665:37;;;;;;;;;;19339:370;;:::o;22272:121::-;;;;:::o;2830:175::-;2888:7;2919:5;;;2942:6;;;;2934:46;;;;;-1:-1:-1;;;2934:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;2997:1;2830:175;-1:-1:-1;;;2830:175:14:o;81:204:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;81:204:15;;;-1:-1:-1;81:204:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "81:204:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13135:89:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15335:202;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15335:202:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;14202:106;;;:::i;:::-;;;;;;;;;;;;;;;;16004:439;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16004:439:14;;;;;;;;;;;;;;;;;:::i;14053:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16838:289;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16838:289:14;;;;;;;;:::i;22589:89::-;;;;;;;;;;;;;;;;-1:-1:-1;22589:89:14;;:::i;:::-;;14366:169;;;;;;;;;;;;;;;;-1:-1:-1;14366:169:14;-1:-1:-1;;;;;14366:169:14;;:::i;22984:324::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22984:324:14;;;;;;;;:::i;13337:93::-;;;:::i;17614:386::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17614:386:14;;;;;;;;:::i;14738:208::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14738:208:14;;;;;;;;:::i;15004:193::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15004:193:14;;;;;;;;;;:::i;13135:89::-;13212:5;13205:12;;;;;;;;-1:-1:-1;;13205:12:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13180:13;;13205:12;;13212:5;;13205:12;;13212:5;13205:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13135:89;:::o;15335:202::-;15450:4;15470:39;15479:12;:10;:12::i;:::-;15493:7;15502:6;15470:8;:39::i;:::-;-1:-1:-1;15526:4:14;15335:202;;;;:::o;14202:106::-;14289:12;;14202:106;:::o;16004:439::-;16140:4;16156:36;16166:6;16174:9;16185:6;16156:9;:36::i;:::-;16202:213;16224:6;16244:12;:10;:12::i;:::-;16270:135;16325:6;16270:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16270:19:14;;;;;;:11;:19;;;;;;16290:12;:10;:12::i;:::-;-1:-1:-1;;;;;16270:33:14;;;;;;;;;;;;-1:-1:-1;16270:33:14;;;:135;:37;:135::i;:::-;16202:8;:213::i;:::-;-1:-1:-1;16432:4:14;16004:439;;;;;:::o;14053:89::-;14126:9;;;;14053:89;:::o;16838:289::-;16950:4;16970:129;16992:12;:10;:12::i;:::-;17018:7;17039:50;17078:10;17039:11;:25;17051:12;:10;:12::i;:::-;-1:-1:-1;;;;;17039:25:14;;;;;;;;;;;;;;;;;-1:-1:-1;17039:25:14;;;:34;;;;;;;;;;;:38;:50::i;22589:89::-;22644:27;22650:12;:10;:12::i;:::-;22664:6;22644:5;:27::i;:::-;22589:89;:::o;14366:169::-;-1:-1:-1;;;;;14510:18:14;14480:7;14510:18;;;;;;;;;;;;14366:169::o;22984:324::-;23060:26;23089:118;23139:6;23089:118;;;;;;;;;;;;;;;;;:32;23099:7;23108:12;:10;:12::i;:::-;23089:9;:32::i;:::-;:36;:118;:36;:118::i;:::-;23060:147;;23218:51;23227:7;23236:12;:10;:12::i;:::-;23250:18;23218:8;:51::i;:::-;23279:22;23285:7;23294:6;23279:5;:22::i;:::-;22984:324;;;:::o;13337:93::-;13416:7;13409:14;;;;;;;;-1:-1:-1;;13409:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13384:13;;13409:14;;13416:7;;13409:14;;13416:7;13409:14;;;;;;;;;;;;;;;;;;;;;;;;17614:386;17731:4;17751:221;17773:12;:10;:12::i;:::-;17799:7;17820:142;17876:15;17820:142;;;;;;;;;;;;;;;;;:11;:25;17832:12;:10;:12::i;:::-;-1:-1:-1;;;;;17820:25:14;;;;;;;;;;;;;;;;;-1:-1:-1;17820:25:14;;;:34;;;;;;;;;;;:142;:38;:142::i;14738:208::-;14856:4;14876:42;14886:12;:10;:12::i;:::-;14900:9;14911:6;14876:9;:42::i;15004:193::-;-1:-1:-1;;;;;15163:18:14;;;15133:7;15163:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;15004:193::o;2830:175::-;2888:7;2919:5;;;2942:6;;;;2934:46;;;;;-1:-1:-1;;;2934:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;2997:1;2830:175;-1:-1:-1;;;2830:175:14:o;10731:104::-;10818:10;10731:104;:::o;20896:370::-;-1:-1:-1;;;;;21027:19:14;;21019:68;;;;-1:-1:-1;;;21019:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21105:21:14;;21097:68;;;;-1:-1:-1;;;21097:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21176:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;21227:32;;;;;;;;;;;;;;;;;20896:370;;;:::o;18474:594::-;-1:-1:-1;;;;;18609:20:14;;18601:70;;;;-1:-1:-1;;;18601:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18689:23:14;;18681:71;;;;-1:-1:-1;;;18681:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18763:47;18784:6;18792:9;18803:6;18763:20;:47::i;:::-;18841:105;18876:6;18841:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18841:17:14;;:9;:17;;;;;;;;;;;;:105;:21;:105::i;:::-;-1:-1:-1;;;;;18821:17:14;;;:9;:17;;;;;;;;;;;:125;;;;18979:20;;;;;;;:32;;19004:6;18979:24;:32::i;:::-;-1:-1:-1;;;;;18956:20:14;;;:9;:20;;;;;;;;;;;;:55;;;;19026:35;;;;;;;18956:20;;19026:35;;;;;;;;;;;;;18474:594;;;:::o;5572:193::-;5688:7;5723:12;5715:6;;;;5707:29;;;;-1:-1:-1;;;5707:29:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5753:5:14;;;5572:193::o;20029:444::-;-1:-1:-1;;;;;20112:21:14;;20104:67;;;;-1:-1:-1;;;20104:67:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20182:49;20203:7;20220:1;20224:6;20182:20;:49::i;:::-;20263:102;20299:6;20263:102;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20263:18:14;;:9;:18;;;;;;;;;;;;:102;:22;:102::i;:::-;-1:-1:-1;;;;;20242:18:14;;:9;:18;;;;;;;;;;:123;20390:12;;:24;;20407:6;20390:16;:24::i;:::-;20375:12;:39;20429:37;;;;;;;;20455:1;;-1:-1:-1;;;;;20429:37:14;;;;;;;;;;;;20029:444;;:::o;3276:155::-;3334:7;3366:1;3361;:6;;3353:49;;;;;-1:-1:-1;;;3353:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3419:5:14;;;3276:155::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport \"./ERC20.sol\";\n\ncontract ERC20Burn is ERC20, ERC20Burnable {\n    constructor(uint8 _decimals) public ERC20(\"Burn Token\", \"BTK\", _decimals) {\n        _mint(msg.sender, 10_000_000_000_000 * uint256(10)**_decimals);\n    }\n}\n",
  "sourcePath": "/Users/apple/Downloads/kinko-ilo-contracts-main/contracts/test/ERC20Burn.sol",
  "ast": {
    "absolutePath": "project:/contracts/test/ERC20Burn.sol",
    "exportedSymbols": {
      "ERC20Burn": [
        7009
      ]
    },
    "id": 7010,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6979,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "absolutePath": "project:/contracts/test/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 6980,
        "nodeType": "ImportDirective",
        "scope": 7010,
        "sourceUnit": 6978,
        "src": "58:21:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6981,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6923,
              "src": "103:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6923",
                "typeString": "contract ERC20"
              }
            },
            "id": 6982,
            "nodeType": "InheritanceSpecifier",
            "src": "103:5:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6983,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6977,
              "src": "110:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$6977",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 6984,
            "nodeType": "InheritanceSpecifier",
            "src": "110:13:15"
          }
        ],
        "contractDependencies": [
          6402,
          6423,
          6923,
          6977
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7009,
        "linearizedBaseContracts": [
          7009,
          6977,
          6923,
          6402,
          6423
        ],
        "name": "ERC20Burn",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7007,
              "nodeType": "Block",
              "src": "204:79:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "220:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "220:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31305f3030305f3030305f3030305f303030",
                          "id": 6997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "232:18:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000_by_1",
                            "typeString": "int_const 10000000000000"
                          },
                          "value": "10_000_000_000_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 7000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "261:2:15",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                }
                              ],
                              "id": 6999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "253:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 6998,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "253:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 7001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "253:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7002,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6986,
                            "src": "266:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "253:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "232:43:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6994,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6799,
                      "src": "214:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "214:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7006,
                  "nodeType": "ExpressionStatement",
                  "src": "214:62:15"
                }
              ]
            },
            "documentation": null,
            "id": 7008,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4275726e20546f6b656e",
                    "id": 6989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "172:12:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_12bd1010b0f27d86394b45e8edec6e61f4a3b49034caaaf2bb094bfd0a9433e3",
                      "typeString": "literal_string \"Burn Token\""
                    },
                    "value": "Burn Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "42544b",
                    "id": 6990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "186:5:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cbd09d845af28ee5b0642a9230e90a4426144cbbda10cea126e4301fa7e1a7f0",
                      "typeString": "literal_string \"BTK\""
                    },
                    "value": "BTK"
                  },
                  {
                    "argumentTypes": null,
                    "id": 6991,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6986,
                    "src": "193:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 6992,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6988,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6923,
                  "src": "166:5:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$6923_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "166:37:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6986,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7008,
                  "src": "142:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6985,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "142:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "141:17:15"
            },
            "returnParameters": {
              "id": 6993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "204:0:15"
            },
            "scope": 7009,
            "src": "130:153:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7010,
        "src": "81:204:15"
      }
    ],
    "src": "33:253:15"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/test/ERC20Burn.sol",
      "exportedSymbols": {
        "ERC20Burn": [
          7009
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 6979,
        "name": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "attributes": {
          "SourceUnit": 6978,
          "absolutePath": "project:/contracts/test/ERC20.sol",
          "file": "./ERC20.sol",
          "scope": 7010,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6980,
        "name": "ImportDirective",
        "src": "58:21:15"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            6402,
            6423,
            6923,
            6977
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7009,
            6977,
            6923,
            6402,
            6423
          ],
          "name": "ERC20Burn",
          "scope": 7010
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20",
                  "referencedDeclaration": 6923,
                  "type": "contract ERC20"
                },
                "id": 6981,
                "name": "UserDefinedTypeName",
                "src": "103:5:15"
              }
            ],
            "id": 6982,
            "name": "InheritanceSpecifier",
            "src": "103:5:15"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Burnable",
                  "referencedDeclaration": 6977,
                  "type": "contract ERC20Burnable"
                },
                "id": 6983,
                "name": "UserDefinedTypeName",
                "src": "110:13:15"
              }
            ],
            "id": 6984,
            "name": "InheritanceSpecifier",
            "src": "110:13:15"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 7009,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_decimals",
                      "overrides": null,
                      "scope": 7008,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 6985,
                        "name": "ElementaryTypeName",
                        "src": "142:5:15"
                      }
                    ],
                    "id": 6986,
                    "name": "VariableDeclaration",
                    "src": "142:15:15"
                  }
                ],
                "id": 6987,
                "name": "ParameterList",
                "src": "141:17:15"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6993,
                "name": "ParameterList",
                "src": "204:0:15"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6923,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 6988,
                    "name": "Identifier",
                    "src": "166:5:15"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4275726e20546f6b656e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Burn Token\"",
                      "value": "Burn Token"
                    },
                    "id": 6989,
                    "name": "Literal",
                    "src": "172:12:15"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "42544b",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"BTK\"",
                      "value": "BTK"
                    },
                    "id": 6990,
                    "name": "Literal",
                    "src": "186:5:15"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6986,
                      "type": "uint8",
                      "value": "_decimals"
                    },
                    "id": 6991,
                    "name": "Identifier",
                    "src": "193:9:15"
                  }
                ],
                "id": 6992,
                "name": "ModifierInvocation",
                "src": "166:37:15"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6799,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 6994,
                            "name": "Identifier",
                            "src": "214:5:15"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 6995,
                                "name": "Identifier",
                                "src": "220:3:15"
                              }
                            ],
                            "id": 6996,
                            "name": "MemberAccess",
                            "src": "220:10:15"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31305f3030305f3030305f3030305f303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10000000000000",
                                  "value": "10_000_000_000_000"
                                },
                                "id": 6997,
                                "name": "Literal",
                                "src": "232:18:15"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "**",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256",
                                              "type": null
                                            },
                                            "id": 6998,
                                            "name": "ElementaryTypeName",
                                            "src": "253:7:15"
                                          }
                                        ],
                                        "id": 6999,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "253:7:15"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 7000,
                                        "name": "Literal",
                                        "src": "261:2:15"
                                      }
                                    ],
                                    "id": 7001,
                                    "name": "FunctionCall",
                                    "src": "253:11:15"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6986,
                                      "type": "uint8",
                                      "value": "_decimals"
                                    },
                                    "id": 7002,
                                    "name": "Identifier",
                                    "src": "266:9:15"
                                  }
                                ],
                                "id": 7003,
                                "name": "BinaryOperation",
                                "src": "253:22:15"
                              }
                            ],
                            "id": 7004,
                            "name": "BinaryOperation",
                            "src": "232:43:15"
                          }
                        ],
                        "id": 7005,
                        "name": "FunctionCall",
                        "src": "214:62:15"
                      }
                    ],
                    "id": 7006,
                    "name": "ExpressionStatement",
                    "src": "214:62:15"
                  }
                ],
                "id": 7007,
                "name": "Block",
                "src": "204:79:15"
              }
            ],
            "id": 7008,
            "name": "FunctionDefinition",
            "src": "130:153:15"
          }
        ],
        "id": 7009,
        "name": "ContractDefinition",
        "src": "81:204:15"
      }
    ],
    "id": 7010,
    "name": "SourceUnit",
    "src": "33:253:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-02T08:04:48.164Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}